---
import CollapsibleCard from '@/components/CollapsibleCard.astro';

interface Props {
  playerId: string;
  title?: string;
  description?: string;
  rtmpUrl?: string;
  host?: string;
  collapsed?: boolean;
}

const {
  playerId,
  title = "视频推流服务",
  description = "实时视频推送与播放",
  collapsed = false,
} = Astro.props;
---

<CollapsibleCard
  id={playerId}
  title={title}
  description={description}
  icon="videocam"
  statusText="推流服务"
  statusType="success"
  collapsed={collapsed}
>
  <div class="space-y-6">

    <!-- 1. 状态显示 -->
    <div class="bg-gray-50 rounded-lg p-4">
      <div class="flex items-center justify-between mb-3">
        <div class="flex items-center space-x-2">
          <span class="material-symbols-outlined text-gray-600 text-lg">info</span>
          <span class="font-medium text-sm text-gray-900">连接状态</span>
        </div>
        <div class="status-indicator status-info" data-status={playerId}>
          <span class="material-symbols-outlined text-sm mr-1">pending</span>
          待连接
        </div>
      </div>
    </div>

    <!-- 2. 主要内容 - 视频播放器 -->
    <div class="bg-gray-50 rounded-lg p-4">
      <div class="flex items-center space-x-2 mb-4">
        <span class="material-symbols-outlined text-green-600 text-lg">videocam</span>
        <span class="font-medium text-sm text-gray-900">视频预览</span>
      </div>

      <div
        class="bg-black rounded-lg flex items-center justify-center relative overflow-hidden video-placeholder text-center text-gray-400"
        style="aspect-ratio: 16/9; min-height: 240px;"
        data-player-id={playerId}
      >
        <div class="space-y-4">
          <span class="material-symbols-outlined text-6xl">play_circle</span>
          <div class="space-y-2">
            <p class="text-lg font-medium">推流预览</p>
            <p class="text-sm opacity-75">配置RTMP地址后点击开始推流</p>
          </div>
        </div>
      </div>
    </div>

    <!-- 3. 控制操作 -->
    <div class="bg-gray-50 rounded-lg p-4">
      <div class="flex items-center space-x-2 mb-4">
        <span class="material-symbols-outlined text-purple-600 text-lg">control_camera</span>
        <span class="font-medium text-sm text-gray-900">推流控制</span>
      </div>

      <div class="flex items-center justify-between">
        <div class="flex items-center space-x-3">
          <button
            class="px-6 py-3 bg-green-600 hover:bg-green-700 text-white font-semibold rounded-lg shadow-md transition-all duration-200 flex items-center"
            onclick={`toggleVideoStream('${playerId}')`}
            data-action="toggle-stream"
            data-player-id={playerId}
          >
            <span class="material-symbols-outlined mr-2 text-xl">play_arrow</span>
            开始推流
          </button>

          <button
            class="px-4 py-3 bg-blue-600 hover:bg-blue-700 text-white font-medium rounded-lg shadow-md transition-all duration-200 flex items-center"
            onclick={`testVideoConnection('${playerId}')`}
            data-action="test-connection"
            data-player-id={playerId}
          >
            <span class="material-symbols-outlined mr-2 text-lg">network_check</span>
            测试连接
          </button>
        </div>

        <!-- Stream Status -->
        <div class="text-xs text-gray-500 text-right">
          <div class="mb-1">推流状态监控</div>
          <div class="status-indicator status-info" data-status={playerId}>
            <span class="material-symbols-outlined text-sm mr-1">pending</span>
            待连接
          </div>
        </div>
      </div>
    </div>

    <!-- 4. 日志终端 -->
    <div class="bg-gray-50 rounded-lg p-4">
      <div class="flex items-center justify-between mb-3">
        <div class="flex items-center space-x-2">
          <span class="material-symbols-outlined text-gray-600 text-lg">terminal</span>
          <span class="font-medium text-sm text-gray-900">推流日志</span>
        </div>
        <button
          class="text-xs text-gray-500 hover:text-gray-700 underline"
          onclick={`clearVideoLogs('${playerId}')`}
        >
          清空日志
        </button>
      </div>
      
      <div 
        class="bg-gray-900 text-green-400 p-3 rounded text-xs font-mono h-32 overflow-y-auto"
        data-terminal={playerId}
      >
        <div class="text-gray-500">[系统] 视频推流服务已初始化</div>
      </div>
    </div>

  </div>
</CollapsibleCard>

<script type="module" is:inline>
  import { videoStreamManager } from '/src/cards/StreamingCard/stream-manager.js';

  if (typeof window !== 'undefined') {
    // 初始化视频流管理器
    window.toggleVideoStream = function(playerId) {
      const manager = videoStreamManager.initialize(playerId);
      if (manager) {
        videoStreamManager.toggleStream(playerId);
      }
    };

    window.testVideoConnection = function(playerId) {
      videoStreamManager.testConnection(playerId);
    };

    window.clearVideoLogs = function(playerId) {
      const logger = videoStreamManager.getLogger(playerId);
      if (logger) {
        logger.clear();
      }
    };

    window.updateHostConfig = function(playerId, newHost) {
      console.log(`Update host config for ${playerId}: ${newHost}`);
      // 这里可以添加主机配置更新逻辑
    };
  }
</script>